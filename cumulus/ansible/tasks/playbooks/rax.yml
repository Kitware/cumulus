- hosts: localhost
  connection: local
  gather_facts: false
  become: false
  vars:
    rax_apikey: "{{ lookup('env', 'RAX_API_KEY') }}"
  tasks:
    - name: Add Network associated with Cluster ID
      rax_network:
        api_key: "{{ rax_apikey }}"
        username: "{{ user_name }}"
        region: "{{ cluster_region }}"
        label: "{{ cluster_id }}"
        cidr: "{{ cluster_cidr }}"
      when: cluster_cidr is defined
      register: cluster_network

    - set_fact:
        cluster_networks: "{% if 'networks' in cluster_network: %}[cluster_id]{% else %}[]{% endif %}"

    - name: Launch Master Instance
      rax:
        api_key: "{{ rax_apikey }}"
        username: "{{ user_name }}"
        name: "Master ({{ cluster_id }})"
        flavor: "{{ master_flavor }}"
        image: "{{master_image_id }}" # Ubuntu 16.04 LTS (Xenial Xerus) (PVHVM)
        key_name: "{{ rax_keyname }}"
        region: "{{ cluster_region }}"
        networks: "{{ cluster_networks + ['public', 'private'] }}"
        group: "master_{{ cluster_id }}"
        meta:
          node_type: 'master'
          cluster_id: '{{ cluster_id }}'
        exact_count: yes
        count: 1
      register: rax_instances

    - set_fact:
        rax_master: "{{ rax_instances['instances'][0] }}"

    - name: Launch Node Instance(s)
      rax:
        api_key: "{{ rax_apikey }}"
        username: "{{ user_name }}"
        name: "Node ({{ cluster_id }}) "
        flavor: "{{ node_flavor }}"
        image: "{{node_image_id }}" # Ubuntu 16.04 LTS (Xenial Xerus) (PVHVM)
        key_name: "{{ rax_keyname }}"
        region: "{{ cluster_region }}"
        networks: "{{ cluster_networks + ['public', 'private'] }}"
        group: "node_{{ cluster_id }}"
        meta:
          node_type: 'node'
          cluster_id: '{{ cluster_id }}'
        exact_count: yes
        count: "{{ node_count }}"
      register: rax_instances

    - include: get_instance_facts.yml
      with_items: "{{ ([rax_master] + rax_instances['instances']) | map(attribute='id') | list }}"
