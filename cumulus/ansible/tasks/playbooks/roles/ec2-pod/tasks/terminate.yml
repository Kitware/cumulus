---
- name: Fail early if required variables are not defined
  fail:
    msg: "Variable {{ item }} is not defined"
  when: item not in hostvars[inventory_hostname]
  with_items:
    - cluster_id
    - cluster_region
    - cluster_zone


- name: Gather facts about remote instances
  ec2_instance_facts:
    filters:
      instance-state-name: 'running'
      "tag:ec2_pod": "{{ cluster_id }}"
    region: "{{ cluster_region }}"
  register: remote

# debug instance list contents being undefined.
# - name: DEBUG Terminate undefined
#   debug:
#     msg: "remote {{ remote['instances'] }} \nlist {{ remote['instances'] | default([]) | map(attribute='instance_id') | list }}"

# - name: Debug - don't terminate EC2 instances
#   fail:
#     msg: Aborting termination of EC2 instances for debugging.

# Note: Previously, we had launch an async job to terminate each of the instances
# then we wait for each of the jobs to be completed, because of:
# https://github.com/ansible/ansible-modules-core/issues/4011
# (Terminate will timeout if we have instances from multiple AWS
# reservations.) Fixed in newer Ansible versions.
- name: Terminate instances
  ec2:
    instance_ids: "{{ item }}"
    region: "{{ cluster_region }}"
    zone: "{{ cluster_zone }}"
    state: absent
    wait: yes
    wait_timeout: 120
  with_items: "{{ remote['instances'] | default([]) | map(attribute='instance_id') | list }}"

- name: Remove security group
  ec2_group:
    description: >-
      security group for ec2 pod: {{ cluster_id }}
    region: "{{ cluster_region }}"
    name: ec2_pod_{{ cluster_id }}
    state: absent
